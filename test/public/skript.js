// –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
let userData = {
    balance: 1250,
    completedTasks: 8,
    availableTasks: 12,
    refCount: 3,
    refEarnings: 450
};

// –î–∞–Ω–Ω—ã–µ –∑–∞–¥–∞–Ω–∏–π
const tasks = [
    { 
        id: 1, 
        title: "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ —Å–∞–π—Ç–µ", 
        desc: "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ —Å–∞–π—Ç–µ –ø–∞—Ä—Ç–Ω–µ—Ä–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ email –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –±–∞–∑–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ–±–µ. –≠—Ç–æ –∑–∞–π–º–µ—Ç –Ω–µ –±–æ–ª–µ–µ 3 –º–∏–Ω—É—Ç.", 
        reward: 50, 
        url: "https://example.com/offer1",
        category: "registration",
        time: "3-5 –º–∏–Ω—É—Ç",
        difficulty: "–õ–µ–≥–∫–∞—è",
        successRate: "95%"
    },
    { 
        id: 2, 
        title: "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", 
        desc: "–°–∫–∞—á–∞–π—Ç–µ –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –º–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–∑ App Store –∏–ª–∏ Google Play. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É.", 
        reward: 100, 
        url: "https://example.com/offer2",
        category: "app",
        time: "5-7 –º–∏–Ω—É—Ç",
        difficulty: "–õ–µ–≥–∫–∞—è",
        successRate: "90%"
    },
    { 
        id: 3, 
        title: "–û—Ñ–æ—Ä–º–∏—Ç–µ –∑–∞–∫–∞–∑", 
        desc: "–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω, –¥–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É –∏ –∑–∞–≤–µ—Ä—à–∏—Ç–µ –ø–æ–∫—É–ø–∫—É. –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞ - 500 —Ä—É–±–ª–µ–π.", 
        reward: 200, 
        url: "https://example.com/offer3",
        category: "shopping",
        time: "10-15 –º–∏–Ω—É—Ç",
        difficulty: "–°—Ä–µ–¥–Ω—è—è",
        successRate: "85%"
    },
    { 
        id: 4, 
        title: "–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª", 
        desc: "–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à Telegram –∫–∞–Ω–∞–ª –∏ –æ—Å—Ç–∞–≤–∞–π—Ç–µ—Å—å –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–º –º–∏–Ω–∏–º—É–º 7 –¥–Ω–µ–π. –ù–µ –æ—Ç–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å —Ä–∞–Ω—å—à–µ –≤—Ä–µ–º–µ–Ω–∏!", 
        reward: 30, 
        url: "https://t.me/example_channel",
        category: "social",
        time: "2-3 –º–∏–Ω—É—Ç—ã",
        difficulty: "–û—á–µ–Ω—å –ª–µ–≥–∫–∞—è",
        successRate: "98%"
    },
    { 
        id: 5, 
        title: "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∫–µ—Ç—É", 
        desc: "–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ 10 –≤–æ–ø—Ä–æ—Å–æ–≤ –∞–Ω–∫–µ—Ç—ã —á–µ—Å—Ç–Ω–æ –∏ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ. –í–∞—à–∏ –æ—Ç–≤–µ—Ç—ã –ø–æ–º–æ–≥—É—Ç —É–ª—É—á—à–∏—Ç—å –Ω–∞—à–∏ —É—Å–ª—É–≥–∏.", 
        reward: 75, 
        url: "https://example.com/survey1",
        category: "registration",
        time: "7-10 –º–∏–Ω—É—Ç",
        difficulty: "–õ–µ–≥–∫–∞—è",
        successRate: "92%"
    },
    { 
        id: 6, 
        title: "–û—Ñ–æ—Ä–º–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É", 
        desc: "–ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –ø—Ä–æ–±–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ 7 –¥–Ω–µ–π. –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å –µ—ë –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø—Ä–æ–±–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞.", 
        reward: 150, 
        url: "https://example.com/subscribe",
        category: "registration",
        time: "5-8 –º–∏–Ω—É—Ç",
        difficulty: "–õ–µ–≥–∫–∞—è",
        successRate: "88%"
    }
];

// –¢–µ–∫—É—â–µ–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ
let currentTask = null;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
window.onload = function() {
    initTelegramWebApp();
    loadTasks();
    updateUserData();
    loadUserProfile();
    initTheme();
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
function initTelegramWebApp() {
    try {
        Telegram.WebApp.ready();
        Telegram.WebApp.expand();
        Telegram.WebApp.enableClosingConfirmation();
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–≤–µ—Ç —Ç–µ–º—É Telegram
        Telegram.WebApp.setHeaderColor('#007aff');
        Telegram.WebApp.setBackgroundColor('#f8f9fa');
        
    } catch (error) {
        console.log('Telegram WebApp –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω');
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Telegram
function loadUserProfile() {
    try {
        const user = Telegram.WebApp.initDataUnsafe.user;
        if (user) {
            document.getElementById('user-name').textContent = 
                user.first_name + (user.last_name ? ' ' + user.last_name : '');
            
            document.getElementById('user-username').textContent = 
                user.username ? '@' + user.username : '–ë–µ–∑ username';
            
            // –°–æ–∑–¥–∞–µ–º –∞–≤–∞—Ç–∞—Ä –∏–∑ –ø–µ—Ä–≤—ã—Ö –±—É–∫–≤ –∏–º–µ–Ω–∏
            const firstName = user.first_name || '';
            const lastName = user.last_name || '';
            const avatarText = (firstName.charAt(0) + (lastName ? lastName.charAt(0) : '')).toUpperCase();
            document.getElementById('user-avatar').textContent = avatarText;
        }
    } catch (error) {
        console.log('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–º—ã
function initTheme() {
    const savedTheme = localStorage.getItem('theme');
    if (savedTheme === 'dark') {
        document.body.classList.add('dark-theme');
        document.getElementById('theme-icon').textContent = '‚òÄÔ∏è';
        Telegram.WebApp.setBackgroundColor('#1a202c');
    }
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã
function toggleTheme() {
    const body = document.body;
    const themeIcon = document.getElementById('theme-icon');
    
    if (body.classList.contains('dark-theme')) {
        body.classList.remove('dark-theme');
        themeIcon.textContent = 'üåô';
        localStorage.setItem('theme', 'light');
        Telegram.WebApp.setBackgroundColor('#f8f9fa');
    } else {
        body.classList.add('dark-theme');
        themeIcon.textContent = '‚òÄÔ∏è';
        localStorage.setItem('theme', 'dark');
        Telegram.WebApp.setBackgroundColor('#1a202c');
    }
}

// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–¥–∞–Ω–∏—è
function loadTasks() {
    const container = document.getElementById('tasks-container');
    container.innerHTML = '';
    
    tasks.forEach(task => {
        const taskHTML = `
            <div class="task-card" onclick="openTaskModal(${task.id})">
                <div class="task-header">
                    <div class="task-title">${task.title}</div>
                    <div class="task-reward">+${task.reward} ‚ÇΩ</div>
                </div>
                <div class="task-desc">${task.desc}</div>
                <div class="task-meta">
                    <span>‚è±Ô∏è ${task.time}</span>
                    <span>üéØ ${task.difficulty}</span>
                </div>
            </div>
        `;
        container.innerHTML += taskHTML;
    });
}

// –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function updateUserData() {
    document.getElementById('user-balance').textContent = userData.balance + ' ‚ÇΩ';
    document.getElementById('completed-tasks').textContent = userData.completedTasks;
    document.getElementById('available-tasks').textContent = userData.availableTasks;
    document.getElementById('success-rate').textContent = 
        Math.round((userData.completedTasks / (userData.completedTasks + userData.availableTasks)) * 100) + '%';
    document.getElementById('ref-count').textContent = userData.refCount;
    document.getElementById('ref-earnings').textContent = userData.refEarnings + '‚ÇΩ';
}

// –û—Ç–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞–¥–∞–Ω–∏—è
function openTaskModal(taskId) {
    const task = tasks.find(t => t.id === taskId);
    if (task) {
        currentTask = task;
        
        document.getElementById('modal-task-title').textContent = task.title;
        document.getElementById('modal-task-desc').textContent = task.desc;
        document.getElementById('modal-task-reward').textContent = '+' + task.reward + ' ‚ÇΩ';
        document.getElementById('modal-task-url').textContent = task.url;
        
        document.getElementById('task-modal').style.display = 'flex';
    }
}

// –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
function closeModal() {
    document.getElementById('task-modal').style.display = 'none';
    currentTask = null;
}

// –ù–∞—á–∞—Ç—å –∑–∞–¥–∞–Ω–∏–µ
function startTask() {
    if (currentTask) {
        // –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Å—ã–ª–∫—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ
        window.open(currentTask.url, '_blank');
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        closeModal();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        showNotification('–ó–∞–¥–∞–Ω–∏–µ –Ω–∞—á–∞—Ç–æ! –í–µ—Ä–Ω–∏—Ç–µ—Å—å –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è.');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        userData.completedTasks++;
        userData.balance += currentTask.reward;
        updateUserData();
    }
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫
function showTab(tabName) {
    // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –≤–∫–ª–∞–¥–∫–∏
    document.querySelectorAll('.tab-content').forEach(tab => {
        tab.classList.remove('active');
    });
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –≤–∫–ª–∞–¥–∫—É
    document.getElementById(tabName + '-tab').classList.add('active');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é
    document.querySelectorAll('.nav-item').forEach(item => {
        item.classList.remove('active');
    });
    event.currentTarget.classList.add('active');
}

// –í—ã–≤–æ–¥ –¥–µ–Ω–µ–≥
function withdrawMoney() {
    if (userData.balance < 100) {
        showNotification('–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞: 100 ‚ÇΩ');
        return;
    }
    
    showNotification(`–ó–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–≤–æ–¥ ${userData.balance} ‚ÇΩ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –û–∂–∏–¥–∞–π—Ç–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏.`);
}

// –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏
function copyRefLink() {
    const refLink = document.getElementById('ref-link');
    refLink.select();
    document.execCommand('copy');
    showNotification('–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!');
}

// –ü—Ä–∏–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
function applyFilters() {
    showNotification('–§–∏–ª—å—Ç—Ä—ã –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!');
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
}

// –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
function showNotification(message) {
    try {
        Telegram.WebApp.showAlert(message);
    } catch (error) {
        alert(message);
    }
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –µ–≥–æ
document.getElementById('task-modal').addEventListener('click', function(e) {
    if (e.target === this) {
        closeModal();
    }
});

// –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ ESC
document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape') {
        closeModal();
    }
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —á–∏–ø–æ–≤
document.querySelectorAll('.chip').forEach(chip => {
    chip.addEventListener('click', function() {
        this.classList.toggle('active');
    });
});